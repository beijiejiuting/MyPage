(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{471:function(a,t,e){"use strict";e.r(t);var r=e(2),s=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"java基础-上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java基础-上"}},[a._v("#")]),a._v(" Java基础(上)")]),a._v(" "),t("h2",{attrs:{id:"string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[a._v("#")]),a._v(" String")]),a._v(" "),t("h3",{attrs:{id:"遍历"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遍历"}},[a._v("#")]),a._v(" 遍历")]),a._v(" "),t("p",[a._v("toCharArray,charAt")]),a._v(" "),t("h3",{attrs:{id:"截取"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#截取"}},[a._v("#")]),a._v(" 截取")]),a._v(" "),t("p",[a._v("substring")]),a._v(" "),t("h3",{attrs:{id:"替换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#替换"}},[a._v("#")]),a._v(" 替换")]),a._v(" "),t("p",[a._v("replace,repalceAll(regex,newstr)")]),a._v(" "),t("h3",{attrs:{id:"拆分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拆分"}},[a._v("#")]),a._v(" 拆分")]),a._v(" "),t("p",[a._v("split")]),a._v(" "),t("h3",{attrs:{id:"stringbuilder"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stringbuilder"}},[a._v("#")]),a._v(" StringBuilder")]),a._v(" "),t("p",[a._v("append,reverse,length,toString")]),a._v(" "),t("p",[a._v("线程不安全")]),a._v(" "),t("h3",{attrs:{id:"stringbuffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stringbuffer"}},[a._v("#")]),a._v(" StringBuffer")]),a._v(" "),t("p",[a._v("线程安全")]),a._v(" "),t("h2",{attrs:{id:"interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#interface"}},[a._v("#")]),a._v(" Interface")]),a._v(" "),t("p",[a._v("interface的多extends implements多态")]),a._v(" "),t("h3",{attrs:{id:"新特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新特性"}},[a._v("#")]),a._v(" 新特性")]),a._v(" "),t("h4",{attrs:{id:"jdk8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk8"}},[a._v("#")]),a._v(" JDK8")]),a._v(" "),t("p",[a._v("允许接口内部default,static方法")]),a._v(" "),t("h4",{attrs:{id:"jdk9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk9"}},[a._v("#")]),a._v(" JDK9")]),a._v(" "),t("p",[a._v("允许接口内部private方法")]),a._v(" "),t("p",[a._v("集合(ArrayList):add(index,element),get,set,size,remove(index/obejct)")]),a._v(" "),t("h2",{attrs:{id:"常用工具类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用工具类"}},[a._v("#")]),a._v(" 常用工具类")]),a._v(" "),t("h3",{attrs:{id:"math"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[a._v("#")]),a._v(" Math")]),a._v(" "),t("p",[a._v("abs,ceil,floor,round,max,pow,random[0,1)")]),a._v(" "),t("h3",{attrs:{id:"system"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#system"}},[a._v("#")]),a._v(" System")]),a._v(" "),t("p",[a._v("exit,currentTimeMillis,arraycopy")]),a._v(" "),t("h3",{attrs:{id:"bigdecimal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bigdecimal"}},[a._v("#")]),a._v(" BigDecimal")]),a._v(" "),t("p",[a._v("构造:(double(不精确)/string)/BigDecimal.valueOf(double)")]),a._v(" "),t("p",[a._v("方法:add,subtract,multiply,devide")]),a._v(" "),t("h3",{attrs:{id:"arrays"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arrays"}},[a._v("#")]),a._v(" Arrays")]),a._v(" "),t("p",[a._v("toSting,equals,binarySearch,sort")]),a._v(" "),t("h3",{attrs:{id:"collections"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#collections"}},[a._v("#")]),a._v(" Collections")]),a._v(" "),t("p",[a._v("addAll,shuffle,binarySearch,swap    sort,max,min元素需要实现Comparable,重写compareTo()")]),a._v(" "),t("h2",{attrs:{id:"包装类-以integer为例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包装类-以integer为例"}},[a._v("#")]),a._v(" 包装类(以Integer为例)")]),a._v(" "),t("h3",{attrs:{id:"获取"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取"}},[a._v("#")]),a._v(" 获取")]),a._v(" "),t("p",[a._v("构造/Integer.valueOf()  拆箱:intValue()")]),a._v(" "),t("h3",{attrs:{id:"static方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#static方法"}},[a._v("#")]),a._v(" static方法")]),a._v(" "),t("p",[a._v("toBinary/Octal/HexString,parseInt")]),a._v(" "),t("h3",{attrs:{id:"整数型常量池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数型常量池"}},[a._v("#")]),a._v(" 整数型常量池")]),a._v(" "),t("p",[a._v("有cache(-128~127)")]),a._v(" "),t("h2",{attrs:{id:"正则表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[a._v("#")]),a._v(" 正则表达式")]),a._v(" "),t("p",[a._v("[]单个,^排除        X? 0/1次    X* 任意次 X+ 大于0次   X{n}n次 X{n,}大于等于n次 X{n,m}n~m次")]),a._v(" "),t("p",[a._v("^X:以X开头     $X:以X结尾")]),a._v(" "),t("h3",{attrs:{id:"通配符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通配符"}},[a._v("#")]),a._v(" 通配符")]),a._v(" "),t("p",[a._v("'.' 任意 '\\d'数字 '\\s' 空白 '\\w'字母数字下划线")]),a._v(" "),t("h3",{attrs:{id:"pattern类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pattern类"}},[a._v("#")]),a._v(" Pattern类")]),a._v(" "),t("p",[a._v("获取:Pattern.compile(regex)")]),a._v(" "),t("h3",{attrs:{id:"matcher类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#matcher类"}},[a._v("#")]),a._v(" Matcher类")]),a._v(" "),t("p",[a._v("获取:pattern.matcher(data)")]),a._v(" "),t("p",[a._v("查找下一个find")]),a._v(" "),t("p",[a._v("获取group(index,0为全部,1开始,regex每个括号是一个组)")]),a._v(" "),t("h2",{attrs:{id:"时间api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#时间api"}},[a._v("#")]),a._v(" 时间API")]),a._v(" "),t("h3",{attrs:{id:"before-java8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#before-java8"}},[a._v("#")]),a._v(" Before Java8")]),a._v(" "),t("p",[a._v("(线程不安全,修改对象本身)")]),a._v(" "),t("h4",{attrs:{id:"date"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#date"}},[a._v("#")]),a._v(" Date")]),a._v(" "),t("p",[a._v("构造(  /long),getTime,setTime")]),a._v(" "),t("h4",{attrs:{id:"simpledateformat-线程不安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#simpledateformat-线程不安全"}},[a._v("#")]),a._v(" SimpleDateFormat(线程不安全)")]),a._v(" "),t("p",[a._v("构造:( /String)yyyy年MM月dd日 HH:mm:ss\tparse,format")]),a._v(" "),t("h4",{attrs:{id:"calendar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#calendar"}},[a._v("#")]),a._v(" Calendar")]),a._v(" "),t("p",[a._v("创建 Calendar.getInstance(),  get,set,add,SetTime(Date),getTime")]),a._v(" "),t("h3",{attrs:{id:"java8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java8"}},[a._v("#")]),a._v(" Java8")]),a._v(" "),t("p",[a._v("(线程安全,不修改对象本身,返回新对象)")]),a._v(" "),t("h4",{attrs:{id:"localtimedate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localtimedate"}},[a._v("#")]),a._v(" LocalTimeDate")]),a._v(" "),t("p",[a._v("构造(static):now/of()  toLocalDate/Time getxx(可以再.getValue()获取int)\nwith/plus/minusxx\nequals,isBefore,isAfter\t\nparse(string,formatter)")]),a._v(" "),t("h4",{attrs:{id:"datetimeformatter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#datetimeformatter"}},[a._v("#")]),a._v(" DateTimeFormatter")]),a._v(" "),t("p",[a._v('构造(static):ofPattern("yyyy年MM月dd日 HH:mm:ss")'),t("br"),a._v("\nformat")]),a._v(" "),t("h4",{attrs:{id:"instant"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#instant"}},[a._v("#")]),a._v(" Instant")]),a._v(" "),t("p",[a._v("构造(static):now/ofxx(),atZone(ZoneId),isBefore,isAfter,plus/minusxx")]),a._v(" "),t("h4",{attrs:{id:"zonedatetime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zonedatetime"}},[a._v("#")]),a._v(" ZoneDateTime")]),a._v(" "),t("p",[a._v("构造(static):now/of(),with/plus/minusxx")]),a._v(" "),t("h4",{attrs:{id:"zoneid-static"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zoneid-static"}},[a._v("#")]),a._v(" ZoneId(static)")]),a._v(" "),t("p",[a._v("getAvailableZoneIds,systemDefault,of")]),a._v(" "),t("h4",{attrs:{id:"peroid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#peroid"}},[a._v("#")]),a._v(" Peroid")]),a._v(" "),t("p",[a._v("构造(static)between(date1,date2) getxx( )")]),a._v(" "),t("h4",{attrs:{id:"duration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#duration"}},[a._v("#")]),a._v(" Duration")]),a._v(" "),t("p",[a._v("构造(static)between(datetime1,datetine2) toxx()")]),a._v(" "),t("h4",{attrs:{id:"chronounit-static"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chronounit-static"}},[a._v("#")]),a._v(" ChronoUnit(static)")]),a._v(" "),t("p",[a._v("ChronoUnit.YEARS/xx.between(datetime1,datetine2)")]),a._v(" "),t("h2",{attrs:{id:"exception"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exception"}},[a._v("#")]),a._v(" Exception")]),a._v(" "),t("p",[a._v('try{}catch(Exception){}finally{}        \tthrows Exception1,Exception2\nthrow new Exception("!"),e.printStackTrace(),e.getMessage()\n子类方法不能throw父类没有的Exception')]),a._v(" "),t("h2",{attrs:{id:"collection接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#collection接口"}},[a._v("#")]),a._v(" Collection接口")]),a._v(" "),t("p",[a._v("add,clear,isEmpty,size\tremove,contains(重写equals)")]),a._v(" "),t("h4",{attrs:{id:"遍历-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遍历-2"}},[a._v("#")]),a._v(" 遍历")]),a._v(" "),t("p",[a._v("迭代器:获取c.iterator(),迭代it.next(),仍有hasNext()\n增强for:for( i : c){}\nforeach(匿名内部类)")]),a._v(" "),t("h3",{attrs:{id:"list接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list接口"}},[a._v("#")]),a._v(" List接口")]),a._v(" "),t("p",[a._v("add,remove,set,get")]),a._v(" "),t("h4",{attrs:{id:"arraylist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraylist"}},[a._v("#")]),a._v(" ArrayList")]),a._v(" "),t("p",[a._v("初始0,add()10,超出扩容1.5倍")]),a._v(" "),t("h4",{attrs:{id:"linkedlist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[a._v("#")]),a._v(" LinkedList")]),a._v(" "),t("p",[a._v("add/get/removeFirst/Last")]),a._v(" "),t("h4",{attrs:{id:"遍历-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遍历-3"}},[a._v("#")]),a._v(" 遍历")]),a._v(" "),t("p",[a._v("迭代器 普通for 增强for foreach\nListIterator previous,haPrevious,add,remove")]),a._v(" "),t("h3",{attrs:{id:"set接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set接口"}},[a._v("#")]),a._v(" Set接口")]),a._v(" "),t("h4",{attrs:{id:"hashset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[a._v("#")]),a._v(" HashSet")]),a._v(" "),t("p",[a._v("(哈希表,去重)重写equals(),hashCode()")]),a._v(" "),t("h5",{attrs:{id:"java8-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java8-2"}},[a._v("#")]),a._v(" Java8-")]),a._v(" "),t("p",[a._v("容量16,头插")]),a._v(" "),t("h5",{attrs:{id:"java8-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java8-3"}},[a._v("#")]),a._v(" Java8")]),a._v(" "),t("p",[a._v("(内部创建HashMap):初始容量16,加载因子0.75,哈希扰动(右移16位),二次哈希(异或原哈希值)")]),a._v(" "),t("p",[a._v("​\t元素超过容量*加载因子时,数组扩容2倍\n​\t链表挂超过8个,数组没超过64,数组扩容2倍\n​\t链表挂超过8个,数组长度到达64,链表转红黑树")]),a._v(" "),t("h4",{attrs:{id:"treeset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#treeset"}},[a._v("#")]),a._v(" TreeSet")]),a._v(" "),t("p",[a._v("(红黑树,排序,去重)")]),a._v(" "),t("p",[a._v("add元素需要实现Comparable,重写compareTo(),返回值0相同,1大/右/正序,-1小/左/ 倒序\n比较器(优先):创建TreeSet时,传入一个Comparator(内部类),重写compare(o1,o2)o1-o2正序")]),a._v(" "),t("h4",{attrs:{id:"linkedhashset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset"}},[a._v("#")]),a._v(" LinkedHashSet")]),a._v(" "),t("p",[a._v("(哈希表+双向链表,存取有序,去重 )")]),a._v(" "),t("h2",{attrs:{id:"map接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#map接口"}},[a._v("#")]),a._v(" Map接口")]),a._v(" "),t("p",[a._v("put(key若相同,value覆盖),remove,clear,containsKey/Value,isEmpty,size")]),a._v(" "),t("h4",{attrs:{id:"遍历-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遍历-4"}},[a._v("#")]),a._v(" 遍历")]),a._v(" "),t("p",[a._v("keySet(获取所有key) get(key)\nentrySet(获取所有键值对),遍历entrySet getKey/Value")]),a._v(" "),t("p",[a._v("foreach(匿名内部类)")]),a._v(" "),t("h2",{attrs:{id:"泛型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#泛型"}},[a._v("#")]),a._v(" 泛型")]),a._v(" "),t("p",[a._v("(将运行时错误提升到编译期)")]),a._v(" "),t("h3",{attrs:{id:"泛型类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#泛型类"}},[a._v("#")]),a._v(" 泛型类")]),a._v(" "),t("p",[a._v("成员变量,方法返回值/参数")]),a._v(" "),t("h3",{attrs:{id:"泛型方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#泛型方法"}},[a._v("#")]),a._v(" 泛型方法")]),a._v(" "),t("p",[a._v("参数 static"),t("code",[a._v("<")]),a._v("T"),t("code",[a._v(">")])]),a._v(" "),t("h3",{attrs:{id:"泛型接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#泛型接口"}},[a._v("#")]),a._v(" 泛型接口")]),a._v(" "),t("p",[a._v("方法返回值/参数 实现时可以指定类型,也可以继续声明泛型")]),a._v(" "),t("h3",{attrs:{id:"泛型通配符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#泛型通配符"}},[a._v("#")]),a._v(" 泛型通配符")]),a._v("\n <?>任意类型 \n"),t("h3",{attrs:{id:"泛型限定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#泛型限定"}},[a._v("#")]),a._v(" 泛型限定")]),a._v("\n<? extends F>F或F子类 <? super S>S或S父类\n\n\n\n## 可变参数\n\n(int... nums)(0~n个)参数接收到nums数组里")])}),[],!1,null,null,null);t.default=s.exports}}]);